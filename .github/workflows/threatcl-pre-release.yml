name: threatcl pre-release

on:
  push:
    branches:
      - main
    tags-ignore:
      - "*"

permissions:
  contents: read

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  cleanup:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - name: Delete old dev release assets
        uses: mknejp/delete-release-assets@v1
        with:
          token: ${{ github.token }}
          tag: dev
          fail-if-no-assets: false
          assets: |
            threatcl-*

  build-dev-linux:
    permissions:
      contents: write
    needs: cleanup
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux]
        goarch: [amd64]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set BUILD_TIME
        run: echo BUILD_TIME=$(date -u +%Y%m%d-%H%M) >> ${GITHUB_ENV}
      - name: Go dev release
        uses: wangyoucao577/go-release-action@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          goos: ${{ matrix.goos }}
          goarch: ${{ matrix.goarch }}
          release_tag: dev
          overwrite: true
          pre_command: export CGO_ENABLED=1
          project_path: cmd/threatcl
          binary_name: threatcl
          asset_name: "threatcl-${{ env.BUILD_TIME }}-${{ matrix.goos}}-${{ matrix.goarch }}"

  build-macos:
    permissions:
      contents: write
    needs: build-dev-linux
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [darwin]
        goarch: [amd64, arm64]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: OXCross for CGO Support
        run: |
          mkdir ../../osxcross
          git clone https://github.com/plentico/osxcross-target.git ../../osxcross/target
      # - name: Set up clang
      #   uses: egor-tensin/setup-clang@v1
      #   with:
      #     version: latest
      #     platform: x64
      - name: Set BUILD_TIME
        run: echo BUILD_TIME=$(date -u +%Y%m%d-%H%M) >> ${GITHUB_ENV}
      - name: Go dev release
        uses: wangyoucao577/go-release-action@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          goos: ${{ matrix.goos }}
          goarch: ${{ matrix.goarch }}
          release_tag: dev
          overwrite: true
          pre_command: export CGO_ENABLED=1 && export CC=/home/runner/work/osxcross/target/bin/o64-clang && export CXX=/home/runner/work/osxcross/target/bin/o64-clang++
          project_path: cmd/threatcl
          binary_name: threatcl
          asset_name: "threatcl-${{ env.BUILD_TIME }}-${{ matrix.goos}}-${{ matrix.goarch }}"

  pre-build-and-push-image:
    runs-on: ubuntu-latest
    needs: [build-macos]
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: arm64

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          flavor: |
            latest=false

      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: false
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64
